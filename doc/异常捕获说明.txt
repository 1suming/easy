1.将Exp库按工程代码生成运行时库方式编译生成库。
2.将头文件与库加入工程。
3.工程的C/C++下“输出文件”中“汇编输出”项选“程序集，机器码和源代码	如果编译出错，可以改回来。
4.链接器的"调试"下"生成映射文件"选“是”。
5.在工程中加入下面代码。将最高级函数包到try块中，(如Game所示)



#define KYLIN_TRY	try{
#define KYLIN_CATCH(str)			\
}						\
	catch (...)				\
{						\
	ExceptionPushBack(str);			\
	throw;					\
};

-----------------------------------------------------------
void GameTest()
{
KYLIN_TRY

	char* p = NULL;
	*p = 'a';

KYLIN_CATCH("GameTest1");
}

-----------------------------------------------------------
void Game()
{
	try
	{
		GameTest();
	}
	catch (const std::exception& e)
	{
		ExceptionPushPop(e.what());
		throw;
	}
	catch (...)
	{
		throw;
	}
}
-----------------------------------------------------------
void main()
{
	//要报告的字符串，格式再议
	char	tReprotStr[]="adfasefbasdrobadbasdasdfgasdf";
	__try
	{
		GamePess();
	}
	__except( ExceptionParse( GetExceptionInformation(), true, tReprotStr, 0 ),	
		TerminateProcess( GetCurrentProcess(), 0 ),
		EXCEPTION_EXECUTE_HANDLER )
	{
	}
}

6.编译工程，会在debug或release目录中生成cod和map文件。
7.运行工程，遇到异常会在执行程序所在目录生成ErrorReport目录，内有错误报告的压缩包

8.分析方法:
   (1).打开错误报告在VersionInfo中会遇示字符串.
   (2).Call Stack为错误时调用堆栈。
     -------------------示例-----------------------------------------------------------
Call Stack:
//此处为异常代码段的基地址
00400000  f:\呀诺达引擎\新引擎\yndengine\release\YNDEngine.exe

  //此处为偏移地址，则实际地址为 00401093
  +00001093  Exception Offset
  +00001136  (1, FD183E41, 4065C0, 1, 0)
  +00002BB8  (400000, 0, 20D82, 1, FD183EAD)
7C800000  C:\WINDOWS\system32\kernel32.dll
  +00016FE7  (36AE570, 36AE370, 7FFDE000, 8054B6ED, 12FFC8)
  
  实际上就是   Preferred load address（基地址） + Exception Offset
  如
  ------------------------------------------------------------------------------
Call Stack:

00F50000  E:\lee-private-project\trunk\easy\build\Debug\easy.exe
  +00045912  Exception Offset
  +000459DD  (5CE40971, 34FA6A, FB87FE, 7EFDE000, CCCCCCCC)
  +00045B2D  (5CE40A99, 34FBB0, 34FAA0, 7EFDE000, CCCCCCCC)
  +00047808  (5CE40BC1, 34FCA8, 34FBD0, 7EFDE000, CCCC)
  +00045CE0  (FB8323, 0, 34FE2C, 0, 7EFDE000)
  +00045FD4  (468E90, FB8323, 0, 5CE40E39, 0)
  +0005AF6F  (1, 461C40, 461F78, 5CE40E89, 0)
  +0005AD9F  (34FE9C, 747C3677, 7EFDE000, 34FEDC, 76F99F02)
747B0000  C:\Windows\syswow64\kernel32.dll
  +00013677  (7EFDE000, 34FEDC, 76F99F02, 7EFDE000, 697827A2)
76F60000  C:\Windows\SysWOW64\ntdll.dll
  +00039F02  (7EFDE000, 697827A2, 0, 0, 7EFDE000)
  +00039ED5  (F70F82, 7EFDE000, FFFFFFFF, 770276CD, 0)
  基地址：
   Preferred load address is 00400000
   00400000 + 00045912 = 445912
   从map文件找到
    0002:000258c0       ?GameTest@@YAXXZ           004458c0 f   easy_main.obj
	0002:00025990       ?Game@@YAXXZ               00445990 f   easy_main.obj
	刚好异常就是在这GameTest中
------------------------------------------------------------------------------

 
打开异常代码段对应的YNDEngine.exe生成的map文件YNDEngine.map
查找00401093，找不到再找0040109找不到再找004010找不到再找00401...
然后定位对应的函数
 0001:00000000       ?Game@@YAHPAUHINSTANCE__@@0PA_WH@Z 00401000 f   YNDEngine.obj

则行号为 00401093 - 00401000 = 93

将"?Game@@YAHPAUHINSTANCE__@@0PA_WH@Z"拷贝一下,在YNDEngine.cod中找到对应以COMDAT开头句子

然后找行号
  00093	c7 00 ff ff ff
  ff		 mov	 DWORD PTR [eax], -1